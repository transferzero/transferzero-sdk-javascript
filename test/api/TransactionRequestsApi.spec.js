/**
 * BitPesa Private API
 * API specification used for internal BitPesa endpoints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TransferzeroSdk);
  }
}(this, function(expect, TransferzeroSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TransferzeroSdk.TransactionRequestsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransactionRequestsApi', function() {
    describe('addDocumentTransactionRequest', function() {
      it('should call addDocumentTransactionRequest successfully', function(done) {
        //uncomment below and update the code to test addDocumentTransactionRequest
        //instance.addDocumentTransactionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelTransactionRequest', function() {
      it('should call cancelTransactionRequest successfully', function(done) {
        //uncomment below and update the code to test cancelTransactionRequest
        //instance.cancelTransactionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmTransactionRequest', function() {
      it('should call confirmTransactionRequest successfully', function(done) {
        //uncomment below and update the code to test confirmTransactionRequest
        //instance.confirmTransactionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionRequest', function() {
      it('should call getTransactionRequest successfully', function(done) {
        //uncomment below and update the code to test getTransactionRequest
        //instance.getTransactionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionRequests', function() {
      it('should call getTransactionRequests successfully', function(done) {
        //uncomment below and update the code to test getTransactionRequests
        //instance.getTransactionRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTransactionRequest', function() {
      it('should call postTransactionRequest successfully', function(done) {
        //uncomment below and update the code to test postTransactionRequest
        //instance.postTransactionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restfulAddDocumentTransactionRequest', function() {
      it('should call restfulAddDocumentTransactionRequest successfully', function(done) {
        //uncomment below and update the code to test restfulAddDocumentTransactionRequest
        //instance.restfulAddDocumentTransactionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionRequestLimits', function() {
      it('should call transactionRequestLimits successfully', function(done) {
        //uncomment below and update the code to test transactionRequestLimits
        //instance.transactionRequestLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateTransactionRequests', function() {
      it('should call validateTransactionRequests successfully', function(done) {
        //uncomment below and update the code to test validateTransactionRequests
        //instance.validateTransactionRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

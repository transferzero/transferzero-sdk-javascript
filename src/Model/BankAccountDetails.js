/**
 * BitPesa Private API
 * API specification used for internal BitPesa endpoints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BankAccountDetails model module.
 * @module Model/BankAccountDetails
 * @version 1.24.0
 */
class BankAccountDetails {
    /**
     * Constructs a new <code>BankAccountDetails</code>.
     * Active Bank Account Details for specified currency.  Business BankAccountDetails Example: &#x60;&#x60;&#x60;json   {     \&quot;id\&quot;:\&quot;ebe9bc0b-f2f6-4ce8-802a-8b79912d041e\&quot;,     \&quot;payin_ccy\&quot;:\&quot;NGN\&quot;,     \&quot;account_name\&quot;:\&quot;NGN Details\&quot;,     \&quot;address\&quot;:\&quot;Test Plot no. Jane Doe Road\&quot;,     \&quot;bank_name\&quot;:\&quot;Standard Test Limited\&quot;,     \&quot;bank_address\&quot;:\&quot;4 Lorem Avenue PO BOX 1022222.\&quot;,     \&quot;iban\&quot;:nil,     \&quot;bic_or_swift\&quot;:nil,     \&quot;sort_code\&quot;:nil,     \&quot;account_number\&quot;:nil,     \&quot;branch_name\&quot;:\&quot;branch_name\&quot;,     \&quot;branch_number\&quot;:nil,     \&quot;branch_code\&quot;:nil,     \&quot;reference\&quot;:nil,     \&quot;status\&quot;:\&quot;unavailable\&quot;,     \&quot;unavailable_message\&quot;:\&quot;Experiencing downtime issues\&quot;   } &#x60;&#x60;&#x60;
     * @alias module:Model/BankAccountDetails
     */
    constructor() { 
        
        BankAccountDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BankAccountDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Model/BankAccountDetails} obj Optional instance to populate.
     * @return {module:Model/BankAccountDetails} The populated <code>BankAccountDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BankAccountDetails();

            if (data.hasOwnProperty('payin_ccy')) {
                obj['payin_ccy'] = ApiClient.convertToType(data['payin_ccy'], 'String');
            }
            if (data.hasOwnProperty('account_name')) {
                obj['account_name'] = ApiClient.convertToType(data['account_name'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('bank_name')) {
                obj['bank_name'] = ApiClient.convertToType(data['bank_name'], 'String');
            }
            if (data.hasOwnProperty('bank_address')) {
                obj['bank_address'] = ApiClient.convertToType(data['bank_address'], 'String');
            }
            if (data.hasOwnProperty('iban')) {
                obj['iban'] = ApiClient.convertToType(data['iban'], 'String');
            }
            if (data.hasOwnProperty('bic_or_swift')) {
                obj['bic_or_swift'] = ApiClient.convertToType(data['bic_or_swift'], 'String');
            }
            if (data.hasOwnProperty('sort_code')) {
                obj['sort_code'] = ApiClient.convertToType(data['sort_code'], 'String');
            }
            if (data.hasOwnProperty('account_number')) {
                obj['account_number'] = ApiClient.convertToType(data['account_number'], 'String');
            }
            if (data.hasOwnProperty('branch_name')) {
                obj['branch_name'] = ApiClient.convertToType(data['branch_name'], 'String');
            }
            if (data.hasOwnProperty('branch_code')) {
                obj['branch_code'] = ApiClient.convertToType(data['branch_code'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('unavailable_message')) {
                obj['unavailable_message'] = ApiClient.convertToType(data['unavailable_message'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The currency for the bank account details
 * @member {String} payin_ccy
 */
BankAccountDetails.prototype['payin_ccy'] = undefined;

/**
 * The business account name
 * @member {String} account_name
 */
BankAccountDetails.prototype['account_name'] = undefined;

/**
 * The business address
 * @member {String} address
 */
BankAccountDetails.prototype['address'] = undefined;

/**
 * The name of the bank as registered with Central Bank of the country.
 * @member {String} bank_name
 */
BankAccountDetails.prototype['bank_name'] = undefined;

/**
 * The address of the bank
 * @member {String} bank_address
 */
BankAccountDetails.prototype['bank_address'] = undefined;

/**
 * An internationally agreed system of identifying bank accounts across national borders
 * @member {String} iban
 */
BankAccountDetails.prototype['iban'] = undefined;

/**
 * Bank Identifier Code
 * @member {String} bic_or_swift
 */
BankAccountDetails.prototype['bic_or_swift'] = undefined;

/**
 * Domestic bank codes used to route money transfers between financial institutions in the United Kingdom/Ireland.
 * @member {String} sort_code
 */
BankAccountDetails.prototype['sort_code'] = undefined;

/**
 * A unique string of numbers and, sometimes, letters and other characters that identifies the owner of an account.
 * @member {String} account_number
 */
BankAccountDetails.prototype['account_number'] = undefined;

/**
 * The name of the branch of the bank
 * @member {String} branch_name
 */
BankAccountDetails.prototype['branch_name'] = undefined;

/**
 * Unique identifying code for a given branch of a bank
 * @member {String} branch_code
 */
BankAccountDetails.prototype['branch_code'] = undefined;

/**
 * A statement from the bank regarding the bank details.
 * @member {String} reference
 */
BankAccountDetails.prototype['reference'] = undefined;

/**
 * One of available, unavailable, hidden
 * @member {String} status
 */
BankAccountDetails.prototype['status'] = undefined;

/**
 * Reason for setting the bank status to unavailable
 * @member {String} unavailable_message
 */
BankAccountDetails.prototype['unavailable_message'] = undefined;

/**
 * @member {String} id
 */
BankAccountDetails.prototype['id'] = undefined;






export default BankAccountDetails;


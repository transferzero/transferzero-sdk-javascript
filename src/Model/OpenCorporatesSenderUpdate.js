/**
 * BitPesa Private API
 * API specification used for internal BitPesa endpoints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OpenCorporatesSenderUpdate model module.
 * @module Model/OpenCorporatesSenderUpdate
 * @version 1.25.0
 */
class OpenCorporatesSenderUpdate {
    /**
     * Constructs a new <code>OpenCorporatesSenderUpdate</code>.
     * @alias module:Model/OpenCorporatesSenderUpdate
     * @param id {String} Id of the sender to be updated with Open Corporates search results
     * @param country {String} Alpha2 code of the country that the company to be searched is registered in
     * @param registrationNumber {String} Registration number of the company to be searched
     */
    constructor(id, country, registrationNumber) { 
        
        OpenCorporatesSenderUpdate.initialize(this, id, country, registrationNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, country, registrationNumber) { 
        obj['id'] = id;
        obj['country'] = country;
        obj['registration_number'] = registrationNumber;
    }

    /**
     * Constructs a <code>OpenCorporatesSenderUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Model/OpenCorporatesSenderUpdate} obj Optional instance to populate.
     * @return {module:Model/OpenCorporatesSenderUpdate} The populated <code>OpenCorporatesSenderUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenCorporatesSenderUpdate();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('registration_number')) {
                obj['registration_number'] = ApiClient.convertToType(data['registration_number'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Id of the sender to be updated with Open Corporates search results
 * @member {String} id
 */
OpenCorporatesSenderUpdate.prototype['id'] = undefined;

/**
 * Alpha2 code of the country that the company to be searched is registered in
 * @member {String} country
 */
OpenCorporatesSenderUpdate.prototype['country'] = undefined;

/**
 * Registration number of the company to be searched
 * @member {String} registration_number
 */
OpenCorporatesSenderUpdate.prototype['registration_number'] = undefined;

/**
 * State/Province for countries that require it.
 * @member {String} state
 */
OpenCorporatesSenderUpdate.prototype['state'] = undefined;






export default OpenCorporatesSenderUpdate;

